= simple_form_for([:super_admin, @user], :html => {:class => "user-form form-horizontal", :id => "user_form"}) do |f|
  - title_user = "User Info"
  = f.error_notification
  .form-actions
    %center
      - back = :back
      - if (f.object.new_record? && @back == "users")
        - back = super_admin_school_path(@school_id)
      - elsif (f.object.new_record? && @back == "schools")
        - back = super_admin_schools_path
      - elsif !f.object.new_record?
        - back = super_admin_school_path(@user.school)
      = hidden_field_tag :back, @back
      = hidden_field_tag :school_id, @school_id
      = link_to "Cancel", back, :class => "btn"
      - if f.object.new_record?
        = f.button :submit, :value => "Create User"
      - else
        - if @user.is?(:admin) 
          = hidden_field_tag "email_admin", @user.email
          - title_user = "Admin Info"
          = f.button :submit, :value => "Save", :id  => "btn_admin"
        - else
          = f.button :submit, :value => "Save"
  .form-inputs
    .title School Info
    .school-info
      = f.input :school_id, :collection => School.order(:name), :label => "School Name", :prompt => "Select One",
                :selected => @school_id
    .title= title_user
    .school-info
      = f.input :first_name, :input_html => {:class => "valid_name"}
      = f.input :last_name, :input_html => {:class => "valid_name"}
      - disable = false
      - if !f.object.new_record? && f.object.is?(:admin)
        - disable = true
      - if disable
        = f.association :role, :collection => [Role[:admin]], :prompt => "Select One", :disabled => disable
      - else
        = f.association :role, :required => true, :collection => @roles, :prompt => "Select One"
      = f.input :email, :input_html => {:class => "valid_email"}
      = f.input :phone, :input_html => {:class => "valid_number"}
      = f.input :notes, :input_html => {:rows => "5", :class => "width-area"}
      
- unless @user.new_record?
  .account
    .title Account 
    .reset_password
      = link_to "Reset Password", reset_password_super_admin_user_path(@user), :data => {:confirm => "Do you want to reset your password?"}, :method => :put, :remote => true
      %p This will send a reset password email to the user.
    .blocked
      = hidden_field_tag "check_locked", @user.is_locked
      - mgs = ""
      - if @user.is_locked
        - mgs = "Do you want to unlock this user? Are you sure?"
      - else
        - mgs = "Do you want to lock this user? Are you sure?"
      = link_to check_box_tag("is_locked", 1, 1), blocked_account_super_admin_user_path(@user)+"?is_locked="+(!@user.is_locked).to_s, :data => { :confirm => mgs }, :method => :put, :remote => true, :title => "Block Account" 
      
      %span.ckb-label Block Account
      %p.text-block User will be locked out of their account until reinstated.
