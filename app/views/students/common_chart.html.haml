
%div{:style => "position:absolute; width:100%; height:0px; z-index:2000"}
  %button#highchart_reset_button{:style => "float:right; display:none; margin: 20px"}
    Reset Zoom
#common_chart{:style=>"width: 100%; height: 100%; margin: 0; position:absolute; left:0px"}


// Create the chart
- content_for(:js) do
  :javascript
    var chart;
    $(function(){
      
      series = jQuery.parseJSON(#{@series.to_json})
      $.each(series, function(indx, seri) {
        $.each(seri["data"], function(i, dt){
        series[indx]["data"][i][0] = Date.parse(dt[0]);
        })
      });
      $(document).ready(function() {
        chart = new Highcharts.Chart({
        chart: {
          renderTo: 'common_chart',
          type: 'spline',
          zoomType: 'xy',
          height : $('#common_chart').height() , 
          width : $('#common_chart').width() ,
          events: {
              load: function(event){
                
                for(var i = 0; i < this.xAxis.length; i++)
                {
                  this.xAxis[i].setExtremes(0,0);
                  this.xAxis[i].setExtremes(null, null, true, true);
                } 
                for(var i = 0; i < this.yAxis.length; i++)
                {
                  this.yAxis[i].setExtremes(0,0);
                  this.yAxis[i].setExtremes(null, null, true, true);
                } 
              },
              click: function(event) {
                if(typeof parent.clickOnChart == 'function')
                  parent.clickOnChart(); 
              },
              selection: function(event) {
                if (event.xAxis) {
                  hasZoom = true;
                  $(highchart_reset_button).show()
              }
            }
          },
          marginRight: 50,
          resetZoomButton: {
                position: {
                    // align: 'right', // by default
                    // verticalAlign: 'top', // by default
                    x: -10000,
                    y: -10000
                },
                relativeTo: 'chart'
            }
        },
        title: {
          text: ''
        },
        subtitle: {
          text: ''
        },
        credits: {
        	enabled: false
        },
        xAxis: {
          type: 'datetime',
          minTickInterval: 60*60*24*7,
          labels: {
            formatter: function() {
                return Highcharts.dateFormat('%b %e, %y', this.value);
            },
            style: {
              'text-decoration': 'underline',
              color: '#315984'
            }
          },
        },
        yAxis: [{
          min: 0,
          title: {
            text: 'Accuracy'
          },
          labels: {
              formatter: function() {
                  return this.value +'%'
              }
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }],
          showEmpty: false
        },{
          min: 0,
          title: {
            text: ''
          },
          labels: {
              formatter: function() {
                  return this.value +'%'
              }
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }]
        },{
          title: {
            text: 'Status'
          },
          labels: {
              formatter: function() {
                  return this.value +'%'
              }
          },
          plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
          }],
          showEmpty: false
        }],
        legend: {
          layout: 'vertical',
          backgroundColor: '#FFFFFF',
          align: 'left',
          verticalAlign: 'top',
          floating: false,
          shadow: true
        },
        tooltip: {
          formatter: function() {
            return ''+
              Highcharts.dateFormat('%b %e, %y', this.x) +': '+ this.y + "%";
          }
        },
        
        plotOptions: {
          spline: {
            events: {
              'click': function() {
                 current = this
                 $(chart.series).each(function(idx, item) {
                    if (item == current) {
                      if (current.options.goal_id)
                        if(typeof parent.selectGoal == 'function')
                          parent.selectGoal(current.options.goal_id, current.color); 
                    }
                 });
              }
            },
            lineWidth: 2,
            states: {
                hover: {
                    lineWidth: 3
                }
            },
            marker: {
                enabled: #{@enable_marker ? 'true' : 'false'},
                states: {
                    hover: {
                        enabled: true,
                        lineWidth: 1
                    }
                }
            },
          },
        },
        series: series

        });
      });

      
      $('#highchart_reset_button').click(function() {
        for(var i = 0; i < chart.xAxis.length; i++)
        {
          chart.xAxis[i].setExtremes(null, null, true, true);
        } 
        for(var i = 0; i < chart.yAxis.length; i++)
        {
          chart.yAxis[i].setExtremes(null, null, true, true);
        } 

        hasZoom = false;
        $(highchart_reset_button).hide()
      });


    });
  
