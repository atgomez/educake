
- goals.each do |goal|
  .cont
    .width-subject.pull-left
      %a{:href=>"#goal_#{goal.id}", "data-toggle" =>"tab", "data-dismiss"=>"div", :class => "icon-plus goal"}
        = " " + goal.subject.name + " " + goal.curriculum.name
    
    .pull-right
      .width-status.pull-left.accuracy.bold
        = ::Util.round_f(goal.accuracy).to_s + "% by " + goal.due_date.strftime("%m/%Y")
      - if params[:action] == 'show'
        - if goal.on_track?
          .track-indicator.pull-left{:class => "on-track", :title => "On-track"}
        - else
          .track-indicator.pull-left{:title => "Not on-track"}

      .pull-left.progress.progress-success
        .bar.custom-bar{:style => "width: #{goal.accuracy}%"}

      - if params[:action] == 'edit'
        .complete-checkbox
          = check_box_tag("complete_checkbox", goal.is_completed, goal.is_completed, :url => update_status_goal_path(goal), :id => "change-status-goal-#{goal.id}", :class => "goal-complete")
          = label_tag('complete_label', 'Goal complete')
          = link_to("Edit", "#", :class => "edit-goal", :target => goal.id)
          = render(:partial => "goals/form", :locals => {:goal => goal, :student => @student, :id => "_modal#{goal.id}"})
    
    .clearfix
    .tab-content
      .details_goal.tab-pane{:id => "goal_#{goal.id}"}
        .clearfix
        .introduce.pull-left
          When verbally told a number (any numeral up to 100), will write the numeral or use cards with numbers on them to display the correct numeral with 80% accuracy on 9 out of 10 trial days as measured by data.
        .goal-progress.pull-right
          - goal.progresses.order('due_date ASC').each do |status|
            .width-status= ::Util.round_f(status.accuracy).to_s + "% by " + status.due_date.strftime("%m/%Y")
        - statuses =  goal.statuses
        - if !statuses.empty?
          %table.table.table-striped
            %thead
              %tr
                %th Date 
                %th Score
                %th Location
            %tbody
              - statuses.each do |status|
                %tr 
                  %td= status.due_date.strftime("%m/%d/%y") rescue ""
                  %td= ::Util.round_f(status.accuracy).to_s+"%" rescue ""
                  %td= [status.user.classroom, status.user.full_name].join(" ") rescue ""
          
.pull-right= render_pagination goals
