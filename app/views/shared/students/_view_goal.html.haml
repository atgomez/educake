- on_edit_mode = (params[:action] == 'edit')
- controller_namespace = ((controller_namespace.nil? ? nil : controller_namespace) rescue nil)

- unless goals.nil?
  - goals.each do |goal|
    .cont.goal-container{:id => "goal-container-#{goal.id}"}
      .width-subject.pull-left
        %a{:href=>"#goal_#{goal.id}", "data-toggle" =>"tab", "data-dismiss"=>"div", :class => "icon-plus goal", :id => "goal#{goal.id}"}
          = " " + goal.full_name
      
      .pull-right
        .width-grade.pull-left.accuracy.bold
          = ::Util.round_f(goal.accuracy).to_s + "% by " + goal.due_date.strftime("%m/%Y")
        - if !on_edit_mode
          - if goal.on_track?
            .track-indicator.pull-left{:class => "on-track", :title => t("common.on_track")}
          - else
            .track-indicator.pull-left{:title => t("common.not_on_track")}

        - if on_edit_mode
          .pull-left.progress.progress-success.small
            .bar.custom-bar{:style => "width: #{goal.goal_grade}%"}

          .complete-checkbox
            = check_box_tag("complete_checkbox", goal.is_completed, goal.is_completed, 
                            :url => update_grade_goal_path(goal), :id => "#{goal.id}", :class => "goal-complete")
            = label_tag('complete_label', 'Goal complete')
            = link_to(t("common.edit"), edit_goal_path(goal, :student_id => student.id), 
                        :class => "edit-goal", :remote => true)
            - redirect_link = url_for(:controller => "students", :action => 'edit', :id => student.id, :user_id => @user.id, :admin_id => @admin)
            = link_to(t("common.delete"), goal_path(goal, :student_id => student.id, :redirect_link => redirect_link), 
                      :class => "delete-goal", :method => :delete, :confirm => t('common.confirm_message'))
        - else
          .pull-left.progress.progress-success
            .bar.custom-bar{:style => "width: #{goal.goal_grade}%"}
          .pull-left
            = link_to(t("student.edit_goal"), edit_goal_path(goal, :student_id => student.id),
                        :class => "edit-goal on-show", :remote => true)

      .clearfix
      .tab-content
        .details_goal.tab-pane{:id => "goal_#{goal.id}"}
          .clearfix
          .introduce.wordwrap.pull-left{:class => (on_edit_mode ? 'small' : '')}
            = h goal.description
          .goal-progress.pull-right{:class => (on_edit_mode ? 'large' : '')}
            - goal.progresses.order('due_date ASC').each do |grade|
              .width-grade= ::Util.round_f(grade.accuracy).to_s + "% by " + grade.due_date.strftime("%m/%Y")
          .clearfix
          .grades-container
  .pull-right#goals_pages= render_pagination goals
